# Define the compilers versions we wish to build the unit tests against
environment:
  matrix:
    - QTDIR: C:\Qt\5.6\mingw49_32
      MINGW: C:\Qt\Tools\mingw49_32
    - QTDIR: C:\Qt\5.9\mingw53_32
      MINGW: C:\Qt\Tools\mingw53_32
    - QTDIR: C:\Qt\5.9\msvc2015
    - QTDIR: C:\Qt\5.9\msvc2015_64

configuration:
  - debug
  - release

# Get the project submodules
# Set the environment variables and paths to make
install:
  - git submodule update --init --recursive
  - '%QTDIR%\bin\qtenv2.bat'
  - set PATH=%PATH%;%QTDIR%\bin;%MINGW%\bin
  - if %QTDIR:msvc=%==%QTDIR% set make=mingw32-make.exe
  - if %QTDIR:_64=%==%QTDIR% ( set ARCH=x86 ) else set ARCH=x64
  - if not %QTDIR:msvc2015=%==%QTDIR% call "%ProgramFiles(x86)%\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" %ARCH%
  - if not %QTDIR:msvc2017=%==%QTDIR% call "%ProgramFiles(x86)%\Microsoft Visual Studio 15.0\VC\vcvarsall.bat" %ARCH%
  - if not %QTDIR:msvc=%==%QTDIR% set make=nmake.exe
  - if not %QTDIR:msvc=%==%QTDIR% %make% /? > nul

# Run qmake
before_build:
  - cd %APPVEYOR_BUILD_FOLDER%
  - qmake -Wall unit_test.pro

# Build the projects
build_script:
  - cd %APPVEYOR_BUILD_FOLDER%
  - '%make%'

 # TODO - fix travis
#before_install:
## Get the latest version of the Geometrize library submodule, and push it to the remote (if necessary)
#- chmod +x ./travis_update_geometrize_submodule.sh
#- ./travis_update_geometrize_submodule.sh
## Coverity Scan
#- echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

# Install g++
#addons:
#  coverity_scan:
#    project:
#      name: "Tw1ddle/geometrize-lib-unit-tests"
#      description: "Travis build bot submitting Coverity build"
#    notification_email: samcodesit@gmail.com
#    build_command_prepend: "qmake unit_test.pro"
#    build_command: "make"
#    branch_pattern: master