# Define the compilers versions we wish to build the unit tests against
environment:
  matrix:
    - QTDIR: C:\Qt\5.6\mingw49_32
      MINGW: C:\Qt\Tools\mingw49_32
    - QTDIR: C:\Qt\5.7\msvc2013
    - QTDIR: C:\Qt\5.7\msvc2013_64
    - QTDIR: C:\Qt\5.7\msvc2015
    - QTDIR: C:\Qt\5.7\msvc2015_64
    - QTDIR: C:\Qt\5.9\msvc2017_64

configuration:
  - debug
  - release

# Workaround to get the project submodules
before_install:
  - git submodule update --init --recursive

# Set the environment variables and paths to make
install:
  - '%QTDIR%\bin\qtenv2.bat'
  - set PATH=%PATH%;%QTDIR%\bin;%MINGW%\bin
  - if %QTDIR:msvc=%==%QTDIR% set make=mingw32-make.exe
  - if %QTDIR:_64=%==%QTDIR% ( set ARCH=x86 ) else set ARCH=x64
  - if not %QTDIR:msvc2013=%==%QTDIR% call "%ProgramFiles(x86)%\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" %ARCH%
  - if not %QTDIR:msvc2015=%==%QTDIR% call "%ProgramFiles(x86)%\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" %ARCH%
  - if not %QTDIR:msvc2017=%==%QTDIR% call "%ProgramFiles(x86)%\Microsoft Visual Studio 15.0\VC\vcvarsall.bat" %ARCH%
  - if not %QTDIR:msvc=%==%QTDIR% set make=nmake.exe
  - if not %QTDIR:msvc=%==%QTDIR% %make% /? > nul

# Run qmake
before_build:
  - pushd unit
  - qmake -d -Wall unit_test.pro
  - popd

# Build the projects
build_script:
  - pushd unit
  - '%make%'
  - popd

# Run the unit test executable
test_script:
  -

# Save the unit test executables
# TODO